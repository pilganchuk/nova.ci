name: Builder
on:
  workflow_call:

jobs:
  build-image:
    name: Build Image
    runs-on: self-hosted
    outputs:
      REP_NAME: ${{ steps.prep.outputs.REP_NAME }}
      SHORT_SHA: ${{ steps.prep.outputs.SHORT_SHA }} 
      SHORT_REF_NAME: ${{ steps.prep.outputs.SHORT_REF_NAME }}
      RELEASE: ${{ steps.prep.outputs.RELEASE }}
    steps:
      - name: Prepare Vars
        id: prep
        run: |
          echo "REP_NAME=`echo ${GITHUB_REPOSITORY} | cut -d "/" -f2 `" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          echo "SHORT_REF_NAME=`echo ${GITHUB_REF_NAME} | cut -c 7-`" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          echo "RELEASE=`echo $(date +'%Y_R%q')`" | tee -a $GITHUB_ENV $GITHUB_OUTPUT
          

      - name: Login to DockerHub Container Registry 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.PILGANCHUK_DOCKERHUB_USERNAME }}
          password: ${{ secrets.PILGANCHUK_DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.REPO_GITHUB_TOKEN }}

      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: |
          docker context create builder

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master
        with:
          install: true
          endpoint: builder
          buildkitd-flags: --debug
 
      - name: Build and push
        uses: docker/build-push-action@v3
        id: main_build_proc
        with:
          file: ./docker/server.Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          target: main
          tags: | 
            ${{ secrets.PILGANCHUK_DOCKERHUB_USERNAME }}/${{ env.REP_NAME }}:${{ env.RELEASE }}_${{ env.SHORT_REF_NAME }}_${{ env.SHORT_SHA }}
            ghcr.io/${{ github.repository_owner }}/${{ env.REP_NAME }}:${{ env.RELEASE }}_${{ env.SHORT_REF_NAME }}_${{ env.SHORT_SHA }}




  notify-telegram:
    name: Notifier
    runs-on: self-hosted
    needs: build-image
    steps:

      - name: Set Telegram Message
        uses: haya14busa/action-cond@v1
        id: telegram_message
        with:
          cond: ${{ contains(join(needs.*.result, ','), 'success') }}
          if_true: |
            üë∑ ${{ github.actor }} created deploy tag.
            
            Building was completed ‚úÖ
            
            ‚ñ∂Ô∏è Repositry: ${{ secrets.PILGANCHUK_DOCKERHUB_USERNAME }}/${{ needs.build-image.outputs.REP_NAME }}

            üîµ Image: ${{ needs.build-image.outputs.RELEASE }}_${{ needs.build-image.outputs.SHORT_REF_NAME }}_${{ needs.build-image.outputs.SHORT_SHA }}

            Repository: ${{ github.repository }}  
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
          if_false: |
            üë∑ ${{ github.actor }} created deploy tag.
            
            ‚ùåBuild Failed
            
            Repository: ${{ github.repository }}  
    
      - name: Send to Telegram
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.NOVAITDEVTEAMDEVOPSBOT_ID }}
          token: ${{ secrets.NOVAITDEVTEAMDEVOPSBOT_TOKEN }}
          message: ${{ steps.telegram_message.outputs.value }}
